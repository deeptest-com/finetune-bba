[
    {
        "instruction": "高亮显示~/excel.xlsx中aluminium,不锈钢材质的组件。",
        "input": "",
        "output": "Language=CATSCRIPT\\n\\nSub CATMain()\\n\\n        Dim excelPath = \"~/excel.xlsx\" '\"D:\\Documents\\catiaVB\\TB.xlsx\"\\n        Dim materials = \"aluminium,不锈钢\" '\"铝,CR240*, [CR270LA]\" \u003e= \"铝,CR240*, [CR270LA]\"\\n        \\n        Dim materialNames() As String = StrToArr materials\\n\\n        If fso.FileExists(excelPath) = False Then\\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\\n            If fso.FileExists(excelPath) = False Then\\n                    MsgBox \"Excel文件不存在: \" \u0026 excelPath\\n                    Exit Sub\\n            End If\\n        End If\\n        Dim partNumberTitle\\n        partNumberTitle = \"Part number\"\\n        Dim mapSearch\\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\\n        \\n        Dim expression\\n        expression = materials\\n        Dim strLen\\n        strLen = Len(expression)\\n        Dim splitPosition\\n        splitPosition = 1\\n        Dim exprChar\\n        For i = 1 To strLen\\n            exprChar = Mid(expression, i, 1)\\n            If Mid(expression, i, 1) = \",\" Then\\n                Dim mess\\n                mess = Mid(expression, splitPosition, i - splitPosition)\\n                splitPosition = i + 1\\n                AddToMapValueList mapSearch, \"MaterialName\", Trim(mess)\\n            End If\\n        Next\\n        If splitPosition \u003c strLen Then\\n            Dim mess2\\n            mess2 = Mid(expression, splitPosition, i - splitPosition)\\n            AddToMapValueList mapSearch, \"MaterialName\", Trim(mess2)\\n        End If\\n    \\n\\n        Dim showPartNumber\\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\\n\\n        Dim showChildComps As Object\\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim transparencyChildComps As Object\\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim ret As Integer\\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\\nEnd Sub\\n"
    },
    {
        "instruction": "高亮显示CR240*材质的组件, part number表格路径~/excel_file.xlsx。",
        "input": "",
        "output": "Language=CATSCRIPT\\n\\nSub CATMain()\\n\\n        Dim excelPath = \"~/excel_file.xlsx\" '\"D:\\Documents\\catiaVB\\TB.xlsx\"\\n        Dim materials = \"CR240*\" '\"铝,CR240*, [CR270LA]\" \u003e= \"铝,CR240*, [CR270LA]\"\\n        \\n        Dim materialNames() As String = StrToArr materials\\n\\n        If fso.FileExists(excelPath) = False Then\\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\\n            If fso.FileExists(excelPath) = False Then\\n                    MsgBox \"Excel文件不存在: \" \u0026 excelPath\\n                    Exit Sub\\n            End If\\n        End If\\n        Dim partNumberTitle\\n        partNumberTitle = \"Part number\"\\n        Dim mapSearch\\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\\n        \\n        Dim expression\\n        expression = materials\\n        Dim strLen\\n        strLen = Len(expression)\\n        Dim splitPosition\\n        splitPosition = 1\\n        Dim exprChar\\n        For i = 1 To strLen\\n            exprChar = Mid(expression, i, 1)\\n            If Mid(expression, i, 1) = \",\" Then\\n                Dim mess\\n                mess = Mid(expression, splitPosition, i - splitPosition)\\n                splitPosition = i + 1\\n                AddToMapValueList mapSearch, \"MaterialName\", Trim(mess)\\n            End If\\n        Next\\n        If splitPosition \u003c strLen Then\\n            Dim mess2\\n            mess2 = Mid(expression, splitPosition, i - splitPosition)\\n            AddToMapValueList mapSearch, \"MaterialName\", Trim(mess2)\\n        End If\\n    \\n\\n        Dim showPartNumber\\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\\n\\n        Dim showChildComps As Object\\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim transparencyChildComps As Object\\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim ret As Integer\\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\\nEnd Sub\\n"
    },
    {
        "instruction": "高亮显示/home/aaron/excel_file.xlsx中aluminium,不锈钢材质的组件。",
        "input": "",
        "output": "Language=CATSCRIPT\\n\\nSub CATMain()\\n\\n        Dim excelPath = \"/home/aaron/excel_file.xlsx\" '\"D:\\Documents\\catiaVB\\TB.xlsx\"\\n        Dim materials = \"aluminium,不锈钢\" '\"铝,CR240*, [CR270LA]\" \u003e= \"铝,CR240*, [CR270LA]\"\\n        \\n        Dim materialNames() As String = StrToArr materials\\n\\n        If fso.FileExists(excelPath) = False Then\\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\\n            If fso.FileExists(excelPath) = False Then\\n                    MsgBox \"Excel文件不存在: \" \u0026 excelPath\\n                    Exit Sub\\n            End If\\n        End If\\n        Dim partNumberTitle\\n        partNumberTitle = \"Part number\"\\n        Dim mapSearch\\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\\n        \\n        Dim expression\\n        expression = materials\\n        Dim strLen\\n        strLen = Len(expression)\\n        Dim splitPosition\\n        splitPosition = 1\\n        Dim exprChar\\n        For i = 1 To strLen\\n            exprChar = Mid(expression, i, 1)\\n            If Mid(expression, i, 1) = \",\" Then\\n                Dim mess\\n                mess = Mid(expression, splitPosition, i - splitPosition)\\n                splitPosition = i + 1\\n                AddToMapValueList mapSearch, \"MaterialName\", Trim(mess)\\n            End If\\n        Next\\n        If splitPosition \u003c strLen Then\\n            Dim mess2\\n            mess2 = Mid(expression, splitPosition, i - splitPosition)\\n            AddToMapValueList mapSearch, \"MaterialName\", Trim(mess2)\\n        End If\\n    \\n\\n        Dim showPartNumber\\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\\n\\n        Dim showChildComps As Object\\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim transparencyChildComps As Object\\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim ret As Integer\\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\\nEnd Sub\\n"
    },
    {
        "instruction": "高亮显示aluminium,不锈钢材质的组件, part number表格路径~/excel.xlsx。",
        "input": "",
        "output": "Language=CATSCRIPT\\n\\nSub CATMain()\\n\\n        Dim excelPath = \"~/excel.xlsx\" '\"D:\\Documents\\catiaVB\\TB.xlsx\"\\n        Dim materials = \"aluminium,不锈钢\" '\"铝,CR240*, [CR270LA]\" \u003e= \"铝,CR240*, [CR270LA]\"\\n        \\n        Dim materialNames() As String = StrToArr materials\\n\\n        If fso.FileExists(excelPath) = False Then\\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\\n            If fso.FileExists(excelPath) = False Then\\n                    MsgBox \"Excel文件不存在: \" \u0026 excelPath\\n                    Exit Sub\\n            End If\\n        End If\\n        Dim partNumberTitle\\n        partNumberTitle = \"Part number\"\\n        Dim mapSearch\\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\\n        \\n        Dim expression\\n        expression = materials\\n        Dim strLen\\n        strLen = Len(expression)\\n        Dim splitPosition\\n        splitPosition = 1\\n        Dim exprChar\\n        For i = 1 To strLen\\n            exprChar = Mid(expression, i, 1)\\n            If Mid(expression, i, 1) = \",\" Then\\n                Dim mess\\n                mess = Mid(expression, splitPosition, i - splitPosition)\\n                splitPosition = i + 1\\n                AddToMapValueList mapSearch, \"MaterialName\", Trim(mess)\\n            End If\\n        Next\\n        If splitPosition \u003c strLen Then\\n            Dim mess2\\n            mess2 = Mid(expression, splitPosition, i - splitPosition)\\n            AddToMapValueList mapSearch, \"MaterialName\", Trim(mess2)\\n        End If\\n    \\n\\n        Dim showPartNumber\\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\\n\\n        Dim showChildComps As Object\\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim transparencyChildComps As Object\\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim ret As Integer\\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\\nEnd Sub\\n"
    },
    {
        "instruction": "高亮显示./excel.xlsx中[CR270LA]材质的组件。",
        "input": "",
        "output": "Language=CATSCRIPT\\n\\nSub CATMain()\\n\\n        Dim excelPath = \"./excel.xlsx\" '\"D:\\Documents\\catiaVB\\TB.xlsx\"\\n        Dim materials = \"[CR270LA]\" '\"铝,CR240*, [CR270LA]\" \u003e= \"铝,CR240*, [CR270LA]\"\\n        \\n        Dim materialNames() As String = StrToArr materials\\n\\n        If fso.FileExists(excelPath) = False Then\\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\\n            If fso.FileExists(excelPath) = False Then\\n                    MsgBox \"Excel文件不存在: \" \u0026 excelPath\\n                    Exit Sub\\n            End If\\n        End If\\n        Dim partNumberTitle\\n        partNumberTitle = \"Part number\"\\n        Dim mapSearch\\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\\n        \\n        Dim expression\\n        expression = materials\\n        Dim strLen\\n        strLen = Len(expression)\\n        Dim splitPosition\\n        splitPosition = 1\\n        Dim exprChar\\n        For i = 1 To strLen\\n            exprChar = Mid(expression, i, 1)\\n            If Mid(expression, i, 1) = \",\" Then\\n                Dim mess\\n                mess = Mid(expression, splitPosition, i - splitPosition)\\n                splitPosition = i + 1\\n                AddToMapValueList mapSearch, \"MaterialName\", Trim(mess)\\n            End If\\n        Next\\n        If splitPosition \u003c strLen Then\\n            Dim mess2\\n            mess2 = Mid(expression, splitPosition, i - splitPosition)\\n            AddToMapValueList mapSearch, \"MaterialName\", Trim(mess2)\\n        End If\\n    \\n\\n        Dim showPartNumber\\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\\n\\n        Dim showChildComps As Object\\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim transparencyChildComps As Object\\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim ret As Integer\\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\\nEnd Sub\\n"
    },
    {
        "instruction": "高亮显示aluminium,不锈钢材质的组件, part number表格路径~/excel.xlsx。",
        "input": "",
        "output": "Language=CATSCRIPT\\n\\nSub CATMain()\\n\\n        Dim excelPath = \"~/excel.xlsx\" '\"D:\\Documents\\catiaVB\\TB.xlsx\"\\n        Dim materials = \"aluminium,不锈钢\" '\"铝,CR240*, [CR270LA]\" \u003e= \"铝,CR240*, [CR270LA]\"\\n        \\n        Dim materialNames() As String = StrToArr materials\\n\\n        If fso.FileExists(excelPath) = False Then\\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\\n            If fso.FileExists(excelPath) = False Then\\n                    MsgBox \"Excel文件不存在: \" \u0026 excelPath\\n                    Exit Sub\\n            End If\\n        End If\\n        Dim partNumberTitle\\n        partNumberTitle = \"Part number\"\\n        Dim mapSearch\\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\\n        \\n        Dim expression\\n        expression = materials\\n        Dim strLen\\n        strLen = Len(expression)\\n        Dim splitPosition\\n        splitPosition = 1\\n        Dim exprChar\\n        For i = 1 To strLen\\n            exprChar = Mid(expression, i, 1)\\n            If Mid(expression, i, 1) = \",\" Then\\n                Dim mess\\n                mess = Mid(expression, splitPosition, i - splitPosition)\\n                splitPosition = i + 1\\n                AddToMapValueList mapSearch, \"MaterialName\", Trim(mess)\\n            End If\\n        Next\\n        If splitPosition \u003c strLen Then\\n            Dim mess2\\n            mess2 = Mid(expression, splitPosition, i - splitPosition)\\n            AddToMapValueList mapSearch, \"MaterialName\", Trim(mess2)\\n        End If\\n    \\n\\n        Dim showPartNumber\\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\\n\\n        Dim showChildComps As Object\\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim transparencyChildComps As Object\\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim ret As Integer\\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\\nEnd Sub\\n"
    },
    {
        "instruction": "高亮显示./excel.xlsx中[CR270LA]材质的组件。",
        "input": "",
        "output": "Language=CATSCRIPT\\n\\nSub CATMain()\\n\\n        Dim excelPath = \"./excel.xlsx\" '\"D:\\Documents\\catiaVB\\TB.xlsx\"\\n        Dim materials = \"[CR270LA]\" '\"铝,CR240*, [CR270LA]\" \u003e= \"铝,CR240*, [CR270LA]\"\\n        \\n        Dim materialNames() As String = StrToArr materials\\n\\n        If fso.FileExists(excelPath) = False Then\\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\\n            If fso.FileExists(excelPath) = False Then\\n                    MsgBox \"Excel文件不存在: \" \u0026 excelPath\\n                    Exit Sub\\n            End If\\n        End If\\n        Dim partNumberTitle\\n        partNumberTitle = \"Part number\"\\n        Dim mapSearch\\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\\n        \\n        Dim expression\\n        expression = materials\\n        Dim strLen\\n        strLen = Len(expression)\\n        Dim splitPosition\\n        splitPosition = 1\\n        Dim exprChar\\n        For i = 1 To strLen\\n            exprChar = Mid(expression, i, 1)\\n            If Mid(expression, i, 1) = \",\" Then\\n                Dim mess\\n                mess = Mid(expression, splitPosition, i - splitPosition)\\n                splitPosition = i + 1\\n                AddToMapValueList mapSearch, \"MaterialName\", Trim(mess)\\n            End If\\n        Next\\n        If splitPosition \u003c strLen Then\\n            Dim mess2\\n            mess2 = Mid(expression, splitPosition, i - splitPosition)\\n            AddToMapValueList mapSearch, \"MaterialName\", Trim(mess2)\\n        End If\\n    \\n\\n        Dim showPartNumber\\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\\n\\n        Dim showChildComps As Object\\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim transparencyChildComps As Object\\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim ret As Integer\\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\\nEnd Sub\\n"
    },
    {
        "instruction": "高亮显示aluminium,不锈钢材质的组件, part number表格路径./excel.xlsx。",
        "input": "",
        "output": "Language=CATSCRIPT\\n\\nSub CATMain()\\n\\n        Dim excelPath = \"./excel.xlsx\" '\"D:\\Documents\\catiaVB\\TB.xlsx\"\\n        Dim materials = \"aluminium,不锈钢\" '\"铝,CR240*, [CR270LA]\" \u003e= \"铝,CR240*, [CR270LA]\"\\n        \\n        Dim materialNames() As String = StrToArr materials\\n\\n        If fso.FileExists(excelPath) = False Then\\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\\n            If fso.FileExists(excelPath) = False Then\\n                    MsgBox \"Excel文件不存在: \" \u0026 excelPath\\n                    Exit Sub\\n            End If\\n        End If\\n        Dim partNumberTitle\\n        partNumberTitle = \"Part number\"\\n        Dim mapSearch\\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\\n        \\n        Dim expression\\n        expression = materials\\n        Dim strLen\\n        strLen = Len(expression)\\n        Dim splitPosition\\n        splitPosition = 1\\n        Dim exprChar\\n        For i = 1 To strLen\\n            exprChar = Mid(expression, i, 1)\\n            If Mid(expression, i, 1) = \",\" Then\\n                Dim mess\\n                mess = Mid(expression, splitPosition, i - splitPosition)\\n                splitPosition = i + 1\\n                AddToMapValueList mapSearch, \"MaterialName\", Trim(mess)\\n            End If\\n        Next\\n        If splitPosition \u003c strLen Then\\n            Dim mess2\\n            mess2 = Mid(expression, splitPosition, i - splitPosition)\\n            AddToMapValueList mapSearch, \"MaterialName\", Trim(mess2)\\n        End If\\n    \\n\\n        Dim showPartNumber\\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\\n\\n        Dim showChildComps As Object\\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim transparencyChildComps As Object\\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim ret As Integer\\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\\nEnd Sub\\n"
    },
    {
        "instruction": "高亮显示D:\\Documents\\catiaVB\\TB.xlsx中CR240*材质的组件。",
        "input": "",
        "output": "Language=CATSCRIPT\\n\\nSub CATMain()\\n\\n        Dim excelPath = \"D:\\Documents\\catiaVB\\TB.xlsx\" '\"D:\\Documents\\catiaVB\\TB.xlsx\"\\n        Dim materials = \"CR240*\" '\"铝,CR240*, [CR270LA]\" \u003e= \"铝,CR240*, [CR270LA]\"\\n        \\n        Dim materialNames() As String = StrToArr materials\\n\\n        If fso.FileExists(excelPath) = False Then\\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\\n            If fso.FileExists(excelPath) = False Then\\n                    MsgBox \"Excel文件不存在: \" \u0026 excelPath\\n                    Exit Sub\\n            End If\\n        End If\\n        Dim partNumberTitle\\n        partNumberTitle = \"Part number\"\\n        Dim mapSearch\\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\\n        \\n        Dim expression\\n        expression = materials\\n        Dim strLen\\n        strLen = Len(expression)\\n        Dim splitPosition\\n        splitPosition = 1\\n        Dim exprChar\\n        For i = 1 To strLen\\n            exprChar = Mid(expression, i, 1)\\n            If Mid(expression, i, 1) = \",\" Then\\n                Dim mess\\n                mess = Mid(expression, splitPosition, i - splitPosition)\\n                splitPosition = i + 1\\n                AddToMapValueList mapSearch, \"MaterialName\", Trim(mess)\\n            End If\\n        Next\\n        If splitPosition \u003c strLen Then\\n            Dim mess2\\n            mess2 = Mid(expression, splitPosition, i - splitPosition)\\n            AddToMapValueList mapSearch, \"MaterialName\", Trim(mess2)\\n        End If\\n    \\n\\n        Dim showPartNumber\\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\\n\\n        Dim showChildComps As Object\\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim transparencyChildComps As Object\\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim ret As Integer\\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\\nEnd Sub\\n"
    },
    {
        "instruction": "高亮显示aluminium,不锈钢材质的组件, part number表格路径~/excel_file.xlsx。",
        "input": "",
        "output": "Language=CATSCRIPT\\n\\nSub CATMain()\\n\\n        Dim excelPath = \"~/excel_file.xlsx\" '\"D:\\Documents\\catiaVB\\TB.xlsx\"\\n        Dim materials = \"aluminium,不锈钢\" '\"铝,CR240*, [CR270LA]\" \u003e= \"铝,CR240*, [CR270LA]\"\\n        \\n        Dim materialNames() As String = StrToArr materials\\n\\n        If fso.FileExists(excelPath) = False Then\\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\\n            If fso.FileExists(excelPath) = False Then\\n                    MsgBox \"Excel文件不存在: \" \u0026 excelPath\\n                    Exit Sub\\n            End If\\n        End If\\n        Dim partNumberTitle\\n        partNumberTitle = \"Part number\"\\n        Dim mapSearch\\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\\n        \\n        Dim expression\\n        expression = materials\\n        Dim strLen\\n        strLen = Len(expression)\\n        Dim splitPosition\\n        splitPosition = 1\\n        Dim exprChar\\n        For i = 1 To strLen\\n            exprChar = Mid(expression, i, 1)\\n            If Mid(expression, i, 1) = \",\" Then\\n                Dim mess\\n                mess = Mid(expression, splitPosition, i - splitPosition)\\n                splitPosition = i + 1\\n                AddToMapValueList mapSearch, \"MaterialName\", Trim(mess)\\n            End If\\n        Next\\n        If splitPosition \u003c strLen Then\\n            Dim mess2\\n            mess2 = Mid(expression, splitPosition, i - splitPosition)\\n            AddToMapValueList mapSearch, \"MaterialName\", Trim(mess2)\\n        End If\\n    \\n\\n        Dim showPartNumber\\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\\n\\n        Dim showChildComps As Object\\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim transparencyChildComps As Object\\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim ret As Integer\\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\\nEnd Sub\\n"
    }
]