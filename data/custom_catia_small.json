[
    {
        "instruction": "高亮显示D:\\Documents\\catiaVB\\TB.xlsx中CR240*材质的组件。",
        "input": "输入：\nexcel_path：D:\\Documents\\catiaVB\\TB.xlsx\n materials：CR240*",
        "output": "Language=CATSCRIPT\\n\\nSub CATMain()\\n\\n        Dim excelPath = \"D:\\Documents\\catiaVB\\TB.xlsx\" \\n        Dim materials = \"CR240*\"\\n        \\n        Dim materialNames() As String = StrToArr materials\\n\\n        If fso.FileExists(excelPath) = False Then\\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\\n            If fso.FileExists(excelPath) = False Then\\n                    MsgBox \"Excel文件不存在: \" \u0026 excelPath\\n                    Exit Sub\\n            End If\\n        End If\\n        Dim partNumberTitle\\n        partNumberTitle = \"Part number\"\\n        Dim mapSearch\\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\\n        \\n        For Each str As String In materialNames\\n            AddToList mapSearch, \"MaterialName\", str\\n        Next\\n\\n        Dim showPartNumber\\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\\n\\n        Dim showChildComps As Object\\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim transparencyChildComps As Object\\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim ret As Integer\\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\\nEnd Sub"
    },
    {
        "instruction": "高亮显示[CR270LA]材质的组件, part number表格路径~/excel_file.xlsx。",
        "input": "输入：\nexcel_path：~/excel_file.xlsx\n materials：[CR270LA]",
        "output": "Language=CATSCRIPT\\n\\nSub CATMain()\\n\\n        Dim excelPath = \"~/excel_file.xlsx\" \\n        Dim materials = \"[CR270LA]\"\\n        \\n        Dim materialNames() As String = StrToArr materials\\n\\n        If fso.FileExists(excelPath) = False Then\\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\\n            If fso.FileExists(excelPath) = False Then\\n                    MsgBox \"Excel文件不存在: \" \u0026 excelPath\\n                    Exit Sub\\n            End If\\n        End If\\n        Dim partNumberTitle\\n        partNumberTitle = \"Part number\"\\n        Dim mapSearch\\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\\n        \\n        For Each str As String In materialNames\\n            AddToList mapSearch, \"MaterialName\", str\\n        Next\\n\\n        Dim showPartNumber\\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\\n\\n        Dim showChildComps As Object\\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim transparencyChildComps As Object\\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim ret As Integer\\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\\nEnd Sub"
    },
    {
        "instruction": "高亮显示~/excel_file.xlsx中[CR270LA]材质的组件。",
        "input": "输入：\nexcel_path：~/excel_file.xlsx\n materials：[CR270LA]",
        "output": "Language=CATSCRIPT\\n\\nSub CATMain()\\n\\n        Dim excelPath = \"~/excel_file.xlsx\" \\n        Dim materials = \"[CR270LA]\"\\n        \\n        Dim materialNames() As String = StrToArr materials\\n\\n        If fso.FileExists(excelPath) = False Then\\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\\n            If fso.FileExists(excelPath) = False Then\\n                    MsgBox \"Excel文件不存在: \" \u0026 excelPath\\n                    Exit Sub\\n            End If\\n        End If\\n        Dim partNumberTitle\\n        partNumberTitle = \"Part number\"\\n        Dim mapSearch\\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\\n        \\n        For Each str As String In materialNames\\n            AddToList mapSearch, \"MaterialName\", str\\n        Next\\n\\n        Dim showPartNumber\\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\\n\\n        Dim showChildComps As Object\\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim transparencyChildComps As Object\\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim ret As Integer\\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\\nEnd Sub"
    },
    {
        "instruction": "高亮显示CR240*材质的组件, part number表格路径/home/aaron/excel_file.xlsx。",
        "input": "输入：\nexcel_path：/home/aaron/excel_file.xlsx\n materials：CR240*",
        "output": "Language=CATSCRIPT\\n\\nSub CATMain()\\n\\n        Dim excelPath = \"/home/aaron/excel_file.xlsx\" \\n        Dim materials = \"CR240*\"\\n        \\n        Dim materialNames() As String = StrToArr materials\\n\\n        If fso.FileExists(excelPath) = False Then\\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\\n            If fso.FileExists(excelPath) = False Then\\n                    MsgBox \"Excel文件不存在: \" \u0026 excelPath\\n                    Exit Sub\\n            End If\\n        End If\\n        Dim partNumberTitle\\n        partNumberTitle = \"Part number\"\\n        Dim mapSearch\\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\\n        \\n        For Each str As String In materialNames\\n            AddToList mapSearch, \"MaterialName\", str\\n        Next\\n\\n        Dim showPartNumber\\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\\n\\n        Dim showChildComps As Object\\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim transparencyChildComps As Object\\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim ret As Integer\\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\\nEnd Sub"
    },
    {
        "instruction": "高亮显示D:\\Documents\\catiaVB\\TB.xlsx中CR240*,[CR270LA]材质的组件。",
        "input": "输入：\nexcel_path：D:\\Documents\\catiaVB\\TB.xlsx\n materials：CR240*,[CR270LA]",
        "output": "Language=CATSCRIPT\\n\\nSub CATMain()\\n\\n        Dim excelPath = \"D:\\Documents\\catiaVB\\TB.xlsx\" \\n        Dim materials = \"CR240*,[CR270LA]\"\\n        \\n        Dim materialNames() As String = StrToArr materials\\n\\n        If fso.FileExists(excelPath) = False Then\\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\\n            If fso.FileExists(excelPath) = False Then\\n                    MsgBox \"Excel文件不存在: \" \u0026 excelPath\\n                    Exit Sub\\n            End If\\n        End If\\n        Dim partNumberTitle\\n        partNumberTitle = \"Part number\"\\n        Dim mapSearch\\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\\n        \\n        For Each str As String In materialNames\\n            AddToList mapSearch, \"MaterialName\", str\\n        Next\\n\\n        Dim showPartNumber\\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\\n\\n        Dim showChildComps As Object\\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim transparencyChildComps As Object\\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim ret As Integer\\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\\nEnd Sub"
    },
    {
        "instruction": "高亮显示CR240*材质的组件, part number表格路径~/excel.xlsx。",
        "input": "输入：\nexcel_path：~/excel.xlsx\n materials：CR240*",
        "output": "Language=CATSCRIPT\\n\\nSub CATMain()\\n\\n        Dim excelPath = \"~/excel.xlsx\" \\n        Dim materials = \"CR240*\"\\n        \\n        Dim materialNames() As String = StrToArr materials\\n\\n        If fso.FileExists(excelPath) = False Then\\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\\n            If fso.FileExists(excelPath) = False Then\\n                    MsgBox \"Excel文件不存在: \" \u0026 excelPath\\n                    Exit Sub\\n            End If\\n        End If\\n        Dim partNumberTitle\\n        partNumberTitle = \"Part number\"\\n        Dim mapSearch\\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\\n        \\n        For Each str As String In materialNames\\n            AddToList mapSearch, \"MaterialName\", str\\n        Next\\n\\n        Dim showPartNumber\\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\\n\\n        Dim showChildComps As Object\\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim transparencyChildComps As Object\\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim ret As Integer\\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\\nEnd Sub"
    },
    {
        "instruction": "高亮显示~/excel.xlsx中CR240*材质的组件。",
        "input": "输入：\nexcel_path：~/excel.xlsx\n materials：CR240*",
        "output": "Language=CATSCRIPT\\n\\nSub CATMain()\\n\\n        Dim excelPath = \"~/excel.xlsx\" \\n        Dim materials = \"CR240*\"\\n        \\n        Dim materialNames() As String = StrToArr materials\\n\\n        If fso.FileExists(excelPath) = False Then\\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\\n            If fso.FileExists(excelPath) = False Then\\n                    MsgBox \"Excel文件不存在: \" \u0026 excelPath\\n                    Exit Sub\\n            End If\\n        End If\\n        Dim partNumberTitle\\n        partNumberTitle = \"Part number\"\\n        Dim mapSearch\\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\\n        \\n        For Each str As String In materialNames\\n            AddToList mapSearch, \"MaterialName\", str\\n        Next\\n\\n        Dim showPartNumber\\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\\n\\n        Dim showChildComps As Object\\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim transparencyChildComps As Object\\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim ret As Integer\\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\\nEnd Sub"
    },
    {
        "instruction": "高亮显示CR240*材质的组件, part number表格路径~/excel_file.xlsx。",
        "input": "输入：\nexcel_path：~/excel_file.xlsx\n materials：CR240*",
        "output": "Language=CATSCRIPT\\n\\nSub CATMain()\\n\\n        Dim excelPath = \"~/excel_file.xlsx\" \\n        Dim materials = \"CR240*\"\\n        \\n        Dim materialNames() As String = StrToArr materials\\n\\n        If fso.FileExists(excelPath) = False Then\\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\\n            If fso.FileExists(excelPath) = False Then\\n                    MsgBox \"Excel文件不存在: \" \u0026 excelPath\\n                    Exit Sub\\n            End If\\n        End If\\n        Dim partNumberTitle\\n        partNumberTitle = \"Part number\"\\n        Dim mapSearch\\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\\n        \\n        For Each str As String In materialNames\\n            AddToList mapSearch, \"MaterialName\", str\\n        Next\\n\\n        Dim showPartNumber\\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\\n\\n        Dim showChildComps As Object\\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim transparencyChildComps As Object\\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim ret As Integer\\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\\nEnd Sub"
    },
    {
        "instruction": "高亮显示/home/aaron/excel_file.xlsx中[CR270LA]材质的组件。",
        "input": "输入：\nexcel_path：/home/aaron/excel_file.xlsx\n materials：[CR270LA]",
        "output": "Language=CATSCRIPT\\n\\nSub CATMain()\\n\\n        Dim excelPath = \"/home/aaron/excel_file.xlsx\" \\n        Dim materials = \"[CR270LA]\"\\n        \\n        Dim materialNames() As String = StrToArr materials\\n\\n        If fso.FileExists(excelPath) = False Then\\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\\n            If fso.FileExists(excelPath) = False Then\\n                    MsgBox \"Excel文件不存在: \" \u0026 excelPath\\n                    Exit Sub\\n            End If\\n        End If\\n        Dim partNumberTitle\\n        partNumberTitle = \"Part number\"\\n        Dim mapSearch\\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\\n        \\n        For Each str As String In materialNames\\n            AddToList mapSearch, \"MaterialName\", str\\n        Next\\n\\n        Dim showPartNumber\\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\\n\\n        Dim showChildComps As Object\\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim transparencyChildComps As Object\\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim ret As Integer\\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\\nEnd Sub"
    },
    {
        "instruction": "高亮显示CR240*,[CR270LA]材质的组件, part number表格路径./excel.xlsx。",
        "input": "输入：\nexcel_path：./excel.xlsx\n materials：CR240*,[CR270LA]",
        "output": "Language=CATSCRIPT\\n\\nSub CATMain()\\n\\n        Dim excelPath = \"./excel.xlsx\" \\n        Dim materials = \"CR240*,[CR270LA]\"\\n        \\n        Dim materialNames() As String = StrToArr materials\\n\\n        If fso.FileExists(excelPath) = False Then\\n            excelPath = InputBox (\"Excel not Exists, enter excel path: \", \"Enter Excel path: \", excelPath)\\n            If fso.FileExists(excelPath) = False Then\\n                    MsgBox \"Excel文件不存在: \" \u0026 excelPath\\n                    Exit Sub\\n            End If\\n        End If\\n        Dim partNumberTitle\\n        partNumberTitle = \"Part number\"\\n        Dim mapSearch\\n        Set mapSearch = CreateObject(\"Scripting.Dictionary\")\\n        \\n        For Each str As String In materialNames\\n            AddToList mapSearch, \"MaterialName\", str\\n        Next\\n\\n        Dim showPartNumber\\n        Set showPartNumber = CreateObject(\"Scripting.Dictionary\")\\n        ReadExcel showPartNumber, mapSearch, excelPath, partNumberTitle\\n\\n        Dim showChildComps As Object\\n        Set showChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim transparencyChildComps As Object\\n        Set transparencyChildComps = CreateObject(\"System.Collections.ArrayList\")\\n        Dim ret As Integer\\n        ret = CATIALoopChildren(showPartNumber, showChildComps, transparencyChildComps)\\nEnd Sub"
    }
]